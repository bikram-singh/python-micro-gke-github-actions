name: CI/CD - Build Flask App → Artifact Registry → Deploy on GKE

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: flask-microservice
  GKE_ZONE: ${{ secrets.GKE_LOCATION }}           # Zone for GKE (e.g., us-central1-a)
  AR_REGION: us-central1                          # Region for Artifact Registry
  REPO: my-python-micro-repo                      # Artifact Registry repo name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_ID_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.AR_REGION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image
        run: |
          IMAGE="${{ env.AR_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
           
      - name: Install GKE gcloud auth plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ env.GKE_ZONE }} \
            --project ${{ secrets.GCP_PROJECT }}

      - name: Deploy to GKE
        run: |
          IMAGE="${{ env.AR_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}="$IMAGE"
          kubectl rollout status deployment/${{ env.IMAGE_NAME }}
